//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace getsetcode.Model
{
    public partial class Agency
    {
        #region Primitive Properties
    
        public virtual int AgencyId
        {
            get;
            set;
        }
    
        public virtual string Name
        {
            get;
            set;
        }
    
        public virtual string Address
        {
            get;
            set;
        }
    
        public virtual string Phone
        {
            get;
            set;
        }
    
        public virtual string Email
        {
            get;
            set;
        }
    
        public virtual Nullable<int> PrimaryContactId
        {
            get { return _primaryContactId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_primaryContactId != value)
                    {
                        if (PrimaryContactPerson != null && PrimaryContactPerson.PersonId != value)
                        {
                            PrimaryContactPerson = null;
                        }
                        _primaryContactId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _primaryContactId;

        #endregion
        #region Navigation Properties
    
        public virtual Person PrimaryContactPerson
        {
            get { return _primaryContactPerson; }
            set
            {
                if (!ReferenceEquals(_primaryContactPerson, value))
                {
                    var previousValue = _primaryContactPerson;
                    _primaryContactPerson = value;
                    FixupPrimaryContactPerson(previousValue);
                }
            }
        }
        private Person _primaryContactPerson;
    
        public virtual ICollection<Contract> Contract
        {
            get
            {
                if (_contract == null)
                {
                    var newCollection = new FixupCollection<Contract>();
                    newCollection.CollectionChanged += FixupContract;
                    _contract = newCollection;
                }
                return _contract;
            }
            set
            {
                if (!ReferenceEquals(_contract, value))
                {
                    var previousValue = _contract as FixupCollection<Contract>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupContract;
                    }
                    _contract = value;
                    var newValue = value as FixupCollection<Contract>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupContract;
                    }
                }
            }
        }
        private ICollection<Contract> _contract;
    
        public virtual ICollection<Person> People
        {
            get
            {
                if (_people == null)
                {
                    var newCollection = new FixupCollection<Person>();
                    newCollection.CollectionChanged += FixupPeople;
                    _people = newCollection;
                }
                return _people;
            }
            set
            {
                if (!ReferenceEquals(_people, value))
                {
                    var previousValue = _people as FixupCollection<Person>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupPeople;
                    }
                    _people = value;
                    var newValue = value as FixupCollection<Person>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupPeople;
                    }
                }
            }
        }
        private ICollection<Person> _people;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupPrimaryContactPerson(Person previousValue)
        {
            if (PrimaryContactPerson != null)
            {
                if (PrimaryContactId != PrimaryContactPerson.PersonId)
                {
                    PrimaryContactId = PrimaryContactPerson.PersonId;
                }
            }
            else if (!_settingFK)
            {
                PrimaryContactId = null;
            }
        }
    
        private void FixupContract(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Contract item in e.NewItems)
                {
                    item.Agency = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Contract item in e.OldItems)
                {
                    if (ReferenceEquals(item.Agency, this))
                    {
                        item.Agency = null;
                    }
                }
            }
        }
    
        private void FixupPeople(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Person item in e.NewItems)
                {
                    if (!item.Agencies.Contains(this))
                    {
                        item.Agencies.Add(this);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Person item in e.OldItems)
                {
                    if (item.Agencies.Contains(this))
                    {
                        item.Agencies.Remove(this);
                    }
                }
            }
        }

        #endregion
    }
}
