//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace getsetcode.Model
{
    public partial class ProjectResponsibility
    {
        #region Primitive Properties
    
        public virtual int ResponsibilityId
        {
            get;
            set;
        }
    
        public virtual int ProjectId
        {
            get { return _projectId; }
            set
            {
                if (_projectId != value)
                {
                    if (Project != null && Project.ProjectId != value)
                    {
                        Project = null;
                    }
                    _projectId = value;
                }
            }
        }
        private int _projectId;
    
        public virtual string Description
        {
            get;
            set;
        }
    
        public virtual byte Rank
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual Project Project
        {
            get { return _project; }
            set
            {
                if (!ReferenceEquals(_project, value))
                {
                    var previousValue = _project;
                    _project = value;
                    FixupProject(previousValue);
                }
            }
        }
        private Project _project;

        #endregion
        #region Association Fixup
    
        private void FixupProject(Project previousValue)
        {
            if (previousValue != null && previousValue.ProjectResponsibilities.Contains(this))
            {
                previousValue.ProjectResponsibilities.Remove(this);
            }
    
            if (Project != null)
            {
                if (!Project.ProjectResponsibilities.Contains(this))
                {
                    Project.ProjectResponsibilities.Add(this);
                }
                if (ProjectId != Project.ProjectId)
                {
                    ProjectId = Project.ProjectId;
                }
            }
        }

        #endregion
    }
}
